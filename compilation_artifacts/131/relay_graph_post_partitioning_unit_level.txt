v0.0.1
%44 = fn (%v3:0: Tensor[(6144,), float32], %v4:0: Tensor[(6144,), float32], %v7:0: Tensor[(3, 2048), float32], %tensor.11:0: Tensor[(3, 2048), int64], %v0:0: Tensor[(96,), float32], %v2:0: Tensor[(96,), float32], %v8:0: Tensor[(3, 128), int64]) -> (Tensor[(3, 2048), float32], Tensor[(3, 128), int64]) {
  %42 = fn (%v3:01: Tensor[(6144,), float32], %v4:01: Tensor[(6144,), float32], %v7:01: Tensor[(3, 2048), float32], %tensor.11:01: Tensor[(3, 2048), int64], %v0:01: Tensor[(96,), float32], %v2:01: Tensor[(96,), float32], %v8:01: Tensor[(3, 128), int64], __dict__=meta[StrMap][0]) -> (Tensor[(3, 2048), float32], Tensor[(3, 128), int64]) {
    %0 = copy(%v3:01, framework_op_name="copy0", output_tensors_name=["copy0:0"], input_tensors_name=[], framework_op_debug_info="aten_div_1/truediv", axis=0) // ty=Tensor[(6144,), float32]
    %1 = copy(%v4:01, framework_op_name="copy1", output_tensors_name=["copy1:0"], input_tensors_name=[], framework_op_debug_info="aten_expand/BroadcastTo", axis=0) // ty=Tensor[(6144,), float32]
    %2 = broadcast_to(%1, framework_op_name="aten_expand/BroadcastTo", output_tensors_name=["aten_expand/BroadcastTo:0"], input_tensors_name=[], framework_op_debug_info="aten_expand/BroadcastTo", shape=[6144]) // ty=Tensor[(6144,), float32]
    %3 = rdivide_scalar(%2, framework_op_name="rdivide_scalar0", output_tensors_name=["rdivide_scalar0:0"], input_tensors_name=[], framework_op_debug_info="aten_div_1/truediv", scalar=1) // ty=Tensor[(6144,), float32]
    %4 = multiply(%0, %3, framework_op_name="aten_div_1/truediv", output_tensors_name=["aten_div_1/truediv:0"], input_tensors_name=[], framework_op_debug_info="aten_div_1/truediv", axis=0) // ty=Tensor[(6144,), float32]
    %5 = reshape(%4, framework_op_name="aten_view_4/Reshape", output_tensors_name=["aten_view_4/Reshape:0"], input_tensors_name=[], framework_op_debug_info="aten_view_4/Reshape", newshape=[3, 2048]) // ty=Tensor[(3, 2048), float32]
    %6 = copy(%v7:01, framework_op_name="copy2", output_tensors_name=["copy2:0"], input_tensors_name=[], framework_op_debug_info="aten_mul_2/mul", axis=0) // ty=Tensor[(3, 2048), float32]
    %7 = copy(%tensor.11:01, framework_op_name="copy3", output_tensors_name=["copy3:0"], input_tensors_name=[], framework_op_debug_info="aten_to_3/Cast", axis=0) // ty=Tensor[(3, 2048), int64]
    %8 = cast(%7, framework_op_name="aten_to_3/Cast", output_tensors_name=["aten_to_3/Cast:0"], input_tensors_name=[], framework_op_debug_info="aten_to_3/Cast", dtype="float32") // ty=Tensor[(3, 2048), float32]
    %9 = floor(%8, framework_op_name="aten_floor/Floor", output_tensors_name=["aten_floor/Floor:0"], input_tensors_name=[], framework_op_debug_info="aten_floor/Floor", axis=0) // ty=Tensor[(3, 2048), float32]
    %10 = cast(%9, framework_op_name="aten_to_4/Cast", output_tensors_name=["aten_to_4/Cast:0"], input_tensors_name=[], framework_op_debug_info="aten_to_4/Cast", dtype="int64") // ty=Tensor[(3, 2048), int64]
    %11 = equal(%10, meta[relay.Constant][2] // ty=Tensor[(1,), int64], framework_op_name="aten_eq_3/Equal", output_tensors_name=["aten_eq_3/Equal:0"], input_tensors_name=[], framework_op_debug_info="aten_eq_3/Equal", axis=0) // ty=Tensor[(3, 2048), bool]
    %12 = copy(%v0:01, framework_op_name="copy4", output_tensors_name=["copy4:0"], input_tensors_name=[], framework_op_debug_info="aten_view/Reshape", axis=0) // ty=Tensor[(96,), float32]
    %13 = reshape(%12, framework_op_name="aten_view/Reshape", output_tensors_name=["aten_view/Reshape:0"], input_tensors_name=[], framework_op_debug_info="aten_view/Reshape", newshape=[3, 32]) // ty=Tensor[(3, 32), float32]
    %14 = copy(%v2:01, framework_op_name="copy5", output_tensors_name=["copy5:0"], input_tensors_name=[], framework_op_debug_info="aten_view_2/Reshape", axis=0) // ty=Tensor[(96,), float32]
    %15 = reshape(%14, framework_op_name="aten_view_2/Reshape", output_tensors_name=["aten_view_2/Reshape:0"], input_tensors_name=[], framework_op_debug_info="aten_view_2/Reshape", newshape=[3, 32]) // ty=Tensor[(3, 32), float32]
    %16 = add(%15, meta[relay.Constant][4] // ty=Tensor[(1,), float32], framework_op_name="aten_add/add", output_tensors_name=["aten_add/add:0"], input_tensors_name=[], framework_op_debug_info="aten_add/add", axis=0) // ty=Tensor[(3, 32), float32]
    %17 = rdivide_scalar(%16, framework_op_name="rdivide_scalar1", output_tensors_name=["rdivide_scalar1:0"], input_tensors_name=[], framework_op_debug_info="aten_div/truediv", scalar=1) // ty=Tensor[(3, 32), float32]
    %18 = multiply(%13, %17, framework_op_name="aten_div/truediv", output_tensors_name=["aten_div/truediv:0"], input_tensors_name=[], framework_op_debug_info="aten_div/truediv", axis=0) // ty=Tensor[(3, 32), float32]
    %19 = reshape(%18, framework_op_name="aten_reshape/Reshape", output_tensors_name=["aten_reshape/Reshape:0"], input_tensors_name=[], framework_op_debug_info="aten_reshape/Reshape", newshape=[96]) // ty=Tensor[(96,), float32]
    %20 = reshape(%19, framework_op_name="aten_view_3/Reshape", output_tensors_name=["aten_view_3/Reshape:0"], input_tensors_name=[], framework_op_debug_info="aten_view_3/Reshape", newshape=[3, 32]) // ty=Tensor[(3, 32), float32]
    %21 = less(%15, meta[relay.Constant][5] // ty=Tensor[(1,), float32], framework_op_name="aten_lt/Less", output_tensors_name=["aten_lt/Less:0"], input_tensors_name=[], framework_op_debug_info="aten_lt/Less", axis=0) // ty=Tensor[(3, 32), bool]
    %22 = logical_and(%21, meta[relay.Constant][6] // ty=Tensor[(3, 32), bool], framework_op_name="aten_logical_and/LogicalAnd", output_tensors_name=["aten_logical_and/LogicalAnd:0"], input_tensors_name=[], framework_op_debug_info="aten_logical_and/LogicalAnd", axis=0) // ty=Tensor[(3, 32), bool]
    %23 = cast(%22, framework_op_name="aten_to_1/Cast", output_tensors_name=["aten_to_1/Cast:0"], input_tensors_name=[], framework_op_debug_info="aten_to_1/Cast", dtype="float32") // ty=Tensor[(3, 32), float32]
    %24 = multiply(%23, meta[relay.Constant][7] // ty=Tensor[(1,), float32], framework_op_name="aten_mul/mul", output_tensors_name=["aten_mul/mul:0"], input_tensors_name=[], framework_op_debug_info="aten_mul/mul", axis=0) // ty=Tensor[(3, 32), float32]
    %25 = add(%20, %24, framework_op_name="aten_add_1/add", output_tensors_name=["aten_add_1/add:0"], input_tensors_name=[], framework_op_debug_info="aten_add_1/add", axis=0) // ty=Tensor[(3, 32), float32]
    %26 = add(%25, meta[relay.Constant][8] // ty=Tensor[(3, 32), float32], framework_op_name="aten_add_2/add", output_tensors_name=["aten_add_2/add:0"], input_tensors_name=[], framework_op_debug_info="aten_add_2/add", axis=0) // ty=Tensor[(3, 32), float32]
    %27 = argmax(%26, framework_op_name="aten_argmax/ArgMax", output_tensors_name=["aten_argmax/ArgMax:0"], input_tensors_name=[], framework_op_debug_info="aten_argmax/ArgMax", axis=[-1]) // ty=Tensor[(3,), int32]
    %28 = cast(%27, framework_op_name="aten_to_7/Cast", output_tensors_name=["aten_to_7/Cast:0"], input_tensors_name=[], framework_op_debug_info="aten_to_7/Cast", dtype="int64") // ty=Tensor[(3,), int64]
    %29 = expand_dims(%28, framework_op_name="aten_unsqueeze/ExpandDims", output_tensors_name=["aten_unsqueeze/ExpandDims:0"], input_tensors_name=[], framework_op_debug_info="aten_unsqueeze/ExpandDims", axis=-1) // ty=Tensor[(3, 1), int64]
    %30 = broadcast_to(%29, framework_op_name="aten_eq_2/BroadcastTo", output_tensors_name=["aten_eq_2/BroadcastTo:0"], input_tensors_name=[], framework_op_debug_info="aten_eq_2/BroadcastTo", shape=[3, 2048]) // ty=Tensor[(3, 2048), int64]
    %31 = equal(%10, %30, framework_op_name="aten_eq_2/Equal", output_tensors_name=["aten_eq_2/Equal:0"], input_tensors_name=[], framework_op_debug_info="aten_eq_2/Equal", axis=0) // ty=Tensor[(3, 2048), bool]
    %32 = cast(%31, framework_op_name="aten_to_8/Cast", output_tensors_name=["aten_to_8/Cast:0"], input_tensors_name=[], framework_op_debug_info="aten_to_8/Cast", dtype="float32") // ty=Tensor[(3, 2048), float32]
    %33 = where(%11, meta[relay.Constant][3] // ty=Tensor[(3, 2048), float32], %32, framework_op_name="aten_where/Select", output_tensors_name=["aten_where/Select:0"], input_tensors_name=[], framework_op_debug_info="aten_where/Select", axis=0) // ty=Tensor[(3, 2048), float32]
    %34 = multiply(%6, %33, framework_op_name="aten_mul_2/mul", output_tensors_name=["aten_mul_2/mul:0"], input_tensors_name=[], framework_op_debug_info="aten_mul_2/mul", axis=0) // ty=Tensor[(3, 2048), float32]
    %35 = multiply(meta[relay.Constant][1] // ty=Tensor[(1,), float32], %34, framework_op_name="aten_rsub/mul", output_tensors_name=["aten_rsub/mul:0"], input_tensors_name=[], framework_op_debug_info="aten_rsub/mul", axis=0) // ty=Tensor[(3, 2048), float32]
    %36 = subtract(meta[relay.Constant][0] // ty=Tensor[(1,), float32], %35, framework_op_name="aten_rsub/sub", output_tensors_name=["aten_rsub/sub:0"], input_tensors_name=[], framework_op_debug_info="aten_rsub/sub", axis=0) // ty=Tensor[(3, 2048), float32]
    %37 = multiply(%36, meta[relay.Constant][9] // ty=Tensor[(1,), float32], framework_op_name="aten_mul_3/mul", output_tensors_name=["aten_mul_3/mul:0"], input_tensors_name=[], framework_op_debug_info="aten_mul_3/mul", axis=0) // ty=Tensor[(3, 2048), float32]
    %38 = add(%5, %37, framework_op_name="add0", output_tensors_name=["add0:0"], input_tensors_name=[], framework_op_debug_info="", axis=0) // ty=Tensor[(3, 2048), float32]
    %39 = copy(%38, framework_op_name="aten_add_3/add", output_tensors_name=["aten_add_3/add:0"], input_tensors_name=[], framework_op_debug_info="aten_add_3/add", axis=0) // ty=Tensor[(3, 2048), float32]
    %40 = copy(%v8:01, framework_op_name="copy6", output_tensors_name=["copy6:0"], input_tensors_name=[], framework_op_debug_info="", axis=0) // ty=Tensor[(3, 128), int64]
    %41 = (%39, %40)
    %41
  }
  %43 = %42(%v3:0, %v4:0, %v7:0, %tensor.11:0, %v0:0, %v2:0, %v8:0) // ty=(Tensor[(3, 2048), float32], Tensor[(3, 128), int64])
  %43
}
%44
// meta data omitted. you can use show_meta_data=True to include meta data